// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            String          @id @default(cuid())
  name          String          @unique @db.VarChar(100)
  password      String
  isAdmin       Boolean         @default(false)
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  
  tags          Tag[]
  passwordEntries PasswordEntry[]
  
  @@map("users")
}

model Tag {
  id          String   @id @default(cuid())
  name        String   @db.VarChar(40)
  description String?  @db.VarChar(255)
  color       String   @db.VarChar(7)
  userId      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  passwordEntries PasswordEntryTag[]
  
  @@unique([name, userId])
  @@map("tags")
}

model PasswordEntry {
  id        String   @id @default(cuid())
  site      String   @db.VarChar(256)
  username  String   @db.VarChar(128)
  password  String?  @db.VarChar(128)
  notes     String?  @db.Text
  salt      String
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  tags      PasswordEntryTag[]
  
  @@unique([site, username, userId])
  @@map("password_entries")
}

model PasswordEntryTag {
  id              String        @id @default(cuid())
  passwordEntryId String
  tagId           String
  
  passwordEntry   PasswordEntry @relation(fields: [passwordEntryId], references: [id], onDelete: Cascade)
  tag             Tag           @relation(fields: [tagId], references: [id], onDelete: Cascade)
  
  @@unique([passwordEntryId, tagId])
  @@map("password_entry_tags")
}
